currLevel
exit
currLevel
exit
node
p.children
node.p
node.p.children
string
node
exit
key
node[key]
exit
childKeys
node
exit
i
childKeys
childKeys.length
node[childKeys[i]]
string
node[key].data
exit
node
node.p
key
exit
key
exit
eit
exit
node
exit
childKeys
exit
childKeys
node
node.e
node.e.children
exit
node
node.s.childre
node.s.children
exit
node
string
exit
string
exit
string
exit
string
exit
node
exit
node
node/p/children
node.p.children
exit
childKeys
exit
childKeys
exit
node
exit
node
exit
node
exit
node
exit
node
exit
node
exit
node
exit
node
jey
key
exit
node
string
exit
string
node
exit
node
string
exit
node.isWord
exit
childKeys
exit
node
node.childreb
node.children
node
node[childKeys[i]]
node
node.children
node.children[childKeys[i]]
exit
node
exit
node
node.childrenexit
exit
string
exit
currLevel
exit
currLevel
exit
currLevel
exit
currLevel
currLevel.children
currLevel.children.p
currLevel.children[key]
currLevel
exit
currLevel
string
exit
node
string
exit
childKeys
node
string
exit
node
node.children
childKeys[i]
node.children
node.children[childKeys[i]]
exit
node
exit
node
exit
node
childKeys
exit
childKeys
node
exit
node
string
exit
childKeys
exit
node
exit
node
string
exit
node
string
exit
node
string
exit
node
exit
node
exit
node
string
exit
node
string
exit
this.suggestArray
node
exit
node
string
node
exit
node
string
exit
string
exit
string
exit
currlevel
currLevel
string
string.split('')
exit
currLevel[letter]
exit
currLevel
exit
currLevel
exit
currLevel
exit
currLevel
exit
currLevel
exit
currLevel
exit
currLevel
exit
currLevel
currLevel.children
exit
currLevel
exit
currLevel
exit
currLevel
exit
currLevel
letter
exit
letter
currLevel
exit
currLevel
currLevel.children
currLevel.p.children
exit
currLevel
currLevel.children
currLevel
exit
currLevel
letter
exit
currLevel
exit
currLevel
exit
currLevel
exit
rootLetter
currLevel
exit
currLevel
exit
currLevel
exit
currLevel
exit
currLevel
currLevel.children
exit
currLevel.children
currLevel
exit
currLevel
exit
currLevel
exit
currLevel
exit
currLevel
exit
currLevel
exit
currLevel
exit
currLevel
letter
exit
string
exit
currLevel
exit
currLevel
exit
currLevel
exit
currLevel
exit
currLevel
exit
currLevel
exit
currLevel
exit
currLevel
exit
array
currLevel
currLevel[children]
currLevel[letter]
currLevel[letter].children
exit
current
currLevel
currLevel.children
currLevel[level]
currLevel[letter]
currLevel[letter].children
array[index - 1]
currLevel[array[index - 1]]
currLevel
currLevel[array[index - 1]]
currLevel[array[index + 1]]
index
array[index - 1]
currLevel[array[index - 1]].children
currLevel[array[index - 1]]
currLevel
currLevel[array[index]]
currLevel[array[index]].children
currLevel[letter]
currLevel[letter].children
exit
currLevel[letter].children
currLevel[letter]
array
currLevel[letter]
currLevel
exit
currLevel
exit
currLevel
exit
currLevel
currLevel[p]
currLevel['p']
currLevel
exit
node
currLevel
currLevel[letter]
letter
letter.children
currLevel.children
letter
currLevel.children[array[index + 1]]
currLevel.chilren
currLevel.children
node
currLevel
currLevel.children
currLevel.children[array[index + 1]]
array 
index
currLevel
currLevel.children[array[inde + 1]]
currLevel.children[array[indxe + 1]]
currLevel.children[array[index + 1]]
node
